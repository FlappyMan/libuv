// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ukex.depthdata.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ukex.depthdata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ukex {

namespace {

const ::google::protobuf::Descriptor* depthdata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  depthdata_reflection_ = NULL;
const ::google::protobuf::Descriptor* depthdata_Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  depthdata_Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* depthdata_Data_Depth_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  depthdata_Data_Depth_reflection_ = NULL;
const ::google::protobuf::Descriptor* depthdata_Data_Depth_buyAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  depthdata_Data_Depth_buyAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* depthdata_Data_Depth_sellAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  depthdata_Data_Depth_sellAction_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* depthdata_CONST_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ukex_2edepthdata_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ukex_2edepthdata_2eproto() {
  protobuf_AddDesc_ukex_2edepthdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ukex.depthdata.proto");
  GOOGLE_CHECK(file != NULL);
  depthdata_descriptor_ = file->message_type(0);
  static const int depthdata_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata, token_),
  };
  depthdata_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      depthdata_descriptor_,
      depthdata::default_instance_,
      depthdata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata, _has_bits_[0]),
      -1,
      -1,
      sizeof(depthdata),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata, _internal_metadata_),
      -1);
  depthdata_Data_descriptor_ = depthdata_descriptor_->nested_type(0);
  static const int depthdata_Data_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data, depth_),
  };
  depthdata_Data_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      depthdata_Data_descriptor_,
      depthdata_Data::default_instance_,
      depthdata_Data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data, _has_bits_[0]),
      -1,
      -1,
      sizeof(depthdata_Data),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data, _internal_metadata_),
      -1);
  depthdata_Data_Depth_descriptor_ = depthdata_Data_descriptor_->nested_type(0);
  static const int depthdata_Data_Depth_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth, buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth, sell_),
  };
  depthdata_Data_Depth_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      depthdata_Data_Depth_descriptor_,
      depthdata_Data_Depth::default_instance_,
      depthdata_Data_Depth_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth, _has_bits_[0]),
      -1,
      -1,
      sizeof(depthdata_Data_Depth),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth, _internal_metadata_),
      -1);
  depthdata_Data_Depth_buyAction_descriptor_ = depthdata_Data_Depth_descriptor_->nested_type(0);
  static const int depthdata_Data_Depth_buyAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth_buyAction, b0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth_buyAction, b1_),
  };
  depthdata_Data_Depth_buyAction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      depthdata_Data_Depth_buyAction_descriptor_,
      depthdata_Data_Depth_buyAction::default_instance_,
      depthdata_Data_Depth_buyAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth_buyAction, _has_bits_[0]),
      -1,
      -1,
      sizeof(depthdata_Data_Depth_buyAction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth_buyAction, _internal_metadata_),
      -1);
  depthdata_Data_Depth_sellAction_descriptor_ = depthdata_Data_Depth_descriptor_->nested_type(1);
  static const int depthdata_Data_Depth_sellAction_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth_sellAction, s0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth_sellAction, s1_),
  };
  depthdata_Data_Depth_sellAction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      depthdata_Data_Depth_sellAction_descriptor_,
      depthdata_Data_Depth_sellAction::default_instance_,
      depthdata_Data_Depth_sellAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth_sellAction, _has_bits_[0]),
      -1,
      -1,
      sizeof(depthdata_Data_Depth_sellAction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(depthdata_Data_Depth_sellAction, _internal_metadata_),
      -1);
  depthdata_CONST_descriptor_ = depthdata_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ukex_2edepthdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      depthdata_descriptor_, &depthdata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      depthdata_Data_descriptor_, &depthdata_Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      depthdata_Data_Depth_descriptor_, &depthdata_Data_Depth::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      depthdata_Data_Depth_buyAction_descriptor_, &depthdata_Data_Depth_buyAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      depthdata_Data_Depth_sellAction_descriptor_, &depthdata_Data_Depth_sellAction::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ukex_2edepthdata_2eproto() {
  delete depthdata::default_instance_;
  delete depthdata_reflection_;
  delete depthdata_Data::default_instance_;
  delete depthdata_Data_reflection_;
  delete depthdata_Data_Depth::default_instance_;
  delete depthdata_Data_Depth_reflection_;
  delete depthdata_Data_Depth_buyAction::default_instance_;
  delete depthdata_Data_Depth_buyAction_reflection_;
  delete depthdata_Data_Depth_sellAction::default_instance_;
  delete depthdata_Data_Depth_sellAction_reflection_;
}

void protobuf_AddDesc_ukex_2edepthdata_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ukex_2edepthdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ukex.depthdata.proto\022\004ukex\"\317\002\n\tdepthda"
    "ta\022\014\n\004type\030\001 \002(\t\022\"\n\004data\030\002 \002(\0132\024.ukex.de"
    "pthdata.Data\022\r\n\005token\030\003 \001(\t\032\356\001\n\004Data\022)\n\005"
    "depth\030\001 \002(\0132\032.ukex.depthdata.Data.Depth\032"
    "\272\001\n\005Depth\0221\n\003buy\030\001 \003(\0132$.ukex.depthdata."
    "Data.Depth.buyAction\0223\n\004sell\030\002 \003(\0132%.uke"
    "x.depthdata.Data.Depth.sellAction\032#\n\tbuy"
    "Action\022\n\n\002b0\030\001 \002(\t\022\n\n\002b1\030\002 \002(\t\032$\n\nsellAc"
    "tion\022\n\n\002s0\030\001 \002(\t\022\n\n\002s1\030\002 \002(\t\"\020\n\005CONST\022\007\n"
    "\003CMD\020j", 366);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ukex.depthdata.proto", &protobuf_RegisterTypes);
  depthdata::default_instance_ = new depthdata();
  depthdata_Data::default_instance_ = new depthdata_Data();
  depthdata_Data_Depth::default_instance_ = new depthdata_Data_Depth();
  depthdata_Data_Depth_buyAction::default_instance_ = new depthdata_Data_Depth_buyAction();
  depthdata_Data_Depth_sellAction::default_instance_ = new depthdata_Data_Depth_sellAction();
  depthdata::default_instance_->InitAsDefaultInstance();
  depthdata_Data::default_instance_->InitAsDefaultInstance();
  depthdata_Data_Depth::default_instance_->InitAsDefaultInstance();
  depthdata_Data_Depth_buyAction::default_instance_->InitAsDefaultInstance();
  depthdata_Data_Depth_sellAction::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ukex_2edepthdata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ukex_2edepthdata_2eproto {
  StaticDescriptorInitializer_ukex_2edepthdata_2eproto() {
    protobuf_AddDesc_ukex_2edepthdata_2eproto();
  }
} static_descriptor_initializer_ukex_2edepthdata_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* depthdata_CONST_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return depthdata_CONST_descriptor_;
}
bool depthdata_CONST_IsValid(int value) {
  switch(value) {
    case 106:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const depthdata_CONST depthdata::CMD;
const depthdata_CONST depthdata::CONST_MIN;
const depthdata_CONST depthdata::CONST_MAX;
const int depthdata::CONST_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int depthdata_Data_Depth_buyAction::kB0FieldNumber;
const int depthdata_Data_Depth_buyAction::kB1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

depthdata_Data_Depth_buyAction::depthdata_Data_Depth_buyAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ukex.depthdata.Data.Depth.buyAction)
}

void depthdata_Data_Depth_buyAction::InitAsDefaultInstance() {
}

depthdata_Data_Depth_buyAction::depthdata_Data_Depth_buyAction(const depthdata_Data_Depth_buyAction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ukex.depthdata.Data.Depth.buyAction)
}

void depthdata_Data_Depth_buyAction::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  b0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  b1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

depthdata_Data_Depth_buyAction::~depthdata_Data_Depth_buyAction() {
  // @@protoc_insertion_point(destructor:ukex.depthdata.Data.Depth.buyAction)
  SharedDtor();
}

void depthdata_Data_Depth_buyAction::SharedDtor() {
  b0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  b1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void depthdata_Data_Depth_buyAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* depthdata_Data_Depth_buyAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return depthdata_Data_Depth_buyAction_descriptor_;
}

const depthdata_Data_Depth_buyAction& depthdata_Data_Depth_buyAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ukex_2edepthdata_2eproto();
  return *default_instance_;
}

depthdata_Data_Depth_buyAction* depthdata_Data_Depth_buyAction::default_instance_ = NULL;

depthdata_Data_Depth_buyAction* depthdata_Data_Depth_buyAction::New(::google::protobuf::Arena* arena) const {
  depthdata_Data_Depth_buyAction* n = new depthdata_Data_Depth_buyAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void depthdata_Data_Depth_buyAction::Clear() {
// @@protoc_insertion_point(message_clear_start:ukex.depthdata.Data.Depth.buyAction)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_b0()) {
      b0_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_b1()) {
      b1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool depthdata_Data_Depth_buyAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ukex.depthdata.Data.Depth.buyAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string b0 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b0().data(), this->b0().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ukex.depthdata.Data.Depth.buyAction.b0");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_b1;
        break;
      }

      // required string b1 = 2;
      case 2: {
        if (tag == 18) {
         parse_b1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->b1().data(), this->b1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ukex.depthdata.Data.Depth.buyAction.b1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ukex.depthdata.Data.Depth.buyAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ukex.depthdata.Data.Depth.buyAction)
  return false;
#undef DO_
}

void depthdata_Data_Depth_buyAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ukex.depthdata.Data.Depth.buyAction)
  // required string b0 = 1;
  if (has_b0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b0().data(), this->b0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.Data.Depth.buyAction.b0");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->b0(), output);
  }

  // required string b1 = 2;
  if (has_b1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b1().data(), this->b1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.Data.Depth.buyAction.b1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->b1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ukex.depthdata.Data.Depth.buyAction)
}

::google::protobuf::uint8* depthdata_Data_Depth_buyAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ukex.depthdata.Data.Depth.buyAction)
  // required string b0 = 1;
  if (has_b0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b0().data(), this->b0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.Data.Depth.buyAction.b0");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->b0(), target);
  }

  // required string b1 = 2;
  if (has_b1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->b1().data(), this->b1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.Data.Depth.buyAction.b1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->b1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ukex.depthdata.Data.Depth.buyAction)
  return target;
}

int depthdata_Data_Depth_buyAction::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ukex.depthdata.Data.Depth.buyAction)
  int total_size = 0;

  if (has_b0()) {
    // required string b0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b0());
  }

  if (has_b1()) {
    // required string b1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b1());
  }

  return total_size;
}
int depthdata_Data_Depth_buyAction::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ukex.depthdata.Data.Depth.buyAction)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string b0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b0());

    // required string b1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b1());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void depthdata_Data_Depth_buyAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ukex.depthdata.Data.Depth.buyAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const depthdata_Data_Depth_buyAction* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const depthdata_Data_Depth_buyAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ukex.depthdata.Data.Depth.buyAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ukex.depthdata.Data.Depth.buyAction)
    MergeFrom(*source);
  }
}

void depthdata_Data_Depth_buyAction::MergeFrom(const depthdata_Data_Depth_buyAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ukex.depthdata.Data.Depth.buyAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_b0()) {
      set_has_b0();
      b0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.b0_);
    }
    if (from.has_b1()) {
      set_has_b1();
      b1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.b1_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void depthdata_Data_Depth_buyAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ukex.depthdata.Data.Depth.buyAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void depthdata_Data_Depth_buyAction::CopyFrom(const depthdata_Data_Depth_buyAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ukex.depthdata.Data.Depth.buyAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool depthdata_Data_Depth_buyAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void depthdata_Data_Depth_buyAction::Swap(depthdata_Data_Depth_buyAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void depthdata_Data_Depth_buyAction::InternalSwap(depthdata_Data_Depth_buyAction* other) {
  b0_.Swap(&other->b0_);
  b1_.Swap(&other->b1_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata depthdata_Data_Depth_buyAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = depthdata_Data_Depth_buyAction_descriptor_;
  metadata.reflection = depthdata_Data_Depth_buyAction_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int depthdata_Data_Depth_sellAction::kS0FieldNumber;
const int depthdata_Data_Depth_sellAction::kS1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

depthdata_Data_Depth_sellAction::depthdata_Data_Depth_sellAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ukex.depthdata.Data.Depth.sellAction)
}

void depthdata_Data_Depth_sellAction::InitAsDefaultInstance() {
}

depthdata_Data_Depth_sellAction::depthdata_Data_Depth_sellAction(const depthdata_Data_Depth_sellAction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ukex.depthdata.Data.Depth.sellAction)
}

void depthdata_Data_Depth_sellAction::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  s0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

depthdata_Data_Depth_sellAction::~depthdata_Data_Depth_sellAction() {
  // @@protoc_insertion_point(destructor:ukex.depthdata.Data.Depth.sellAction)
  SharedDtor();
}

void depthdata_Data_Depth_sellAction::SharedDtor() {
  s0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void depthdata_Data_Depth_sellAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* depthdata_Data_Depth_sellAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return depthdata_Data_Depth_sellAction_descriptor_;
}

const depthdata_Data_Depth_sellAction& depthdata_Data_Depth_sellAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ukex_2edepthdata_2eproto();
  return *default_instance_;
}

depthdata_Data_Depth_sellAction* depthdata_Data_Depth_sellAction::default_instance_ = NULL;

depthdata_Data_Depth_sellAction* depthdata_Data_Depth_sellAction::New(::google::protobuf::Arena* arena) const {
  depthdata_Data_Depth_sellAction* n = new depthdata_Data_Depth_sellAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void depthdata_Data_Depth_sellAction::Clear() {
// @@protoc_insertion_point(message_clear_start:ukex.depthdata.Data.Depth.sellAction)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_s0()) {
      s0_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_s1()) {
      s1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool depthdata_Data_Depth_sellAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ukex.depthdata.Data.Depth.sellAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string s0 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s0()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->s0().data(), this->s0().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ukex.depthdata.Data.Depth.sellAction.s0");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_s1;
        break;
      }

      // required string s1 = 2;
      case 2: {
        if (tag == 18) {
         parse_s1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->s1().data(), this->s1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ukex.depthdata.Data.Depth.sellAction.s1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ukex.depthdata.Data.Depth.sellAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ukex.depthdata.Data.Depth.sellAction)
  return false;
#undef DO_
}

void depthdata_Data_Depth_sellAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ukex.depthdata.Data.Depth.sellAction)
  // required string s0 = 1;
  if (has_s0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s0().data(), this->s0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.Data.Depth.sellAction.s0");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->s0(), output);
  }

  // required string s1 = 2;
  if (has_s1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s1().data(), this->s1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.Data.Depth.sellAction.s1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->s1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ukex.depthdata.Data.Depth.sellAction)
}

::google::protobuf::uint8* depthdata_Data_Depth_sellAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ukex.depthdata.Data.Depth.sellAction)
  // required string s0 = 1;
  if (has_s0()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s0().data(), this->s0().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.Data.Depth.sellAction.s0");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->s0(), target);
  }

  // required string s1 = 2;
  if (has_s1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s1().data(), this->s1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.Data.Depth.sellAction.s1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->s1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ukex.depthdata.Data.Depth.sellAction)
  return target;
}

int depthdata_Data_Depth_sellAction::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ukex.depthdata.Data.Depth.sellAction)
  int total_size = 0;

  if (has_s0()) {
    // required string s0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s0());
  }

  if (has_s1()) {
    // required string s1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s1());
  }

  return total_size;
}
int depthdata_Data_Depth_sellAction::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ukex.depthdata.Data.Depth.sellAction)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string s0 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s0());

    // required string s1 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s1());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void depthdata_Data_Depth_sellAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ukex.depthdata.Data.Depth.sellAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const depthdata_Data_Depth_sellAction* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const depthdata_Data_Depth_sellAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ukex.depthdata.Data.Depth.sellAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ukex.depthdata.Data.Depth.sellAction)
    MergeFrom(*source);
  }
}

void depthdata_Data_Depth_sellAction::MergeFrom(const depthdata_Data_Depth_sellAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ukex.depthdata.Data.Depth.sellAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_s0()) {
      set_has_s0();
      s0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s0_);
    }
    if (from.has_s1()) {
      set_has_s1();
      s1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s1_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void depthdata_Data_Depth_sellAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ukex.depthdata.Data.Depth.sellAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void depthdata_Data_Depth_sellAction::CopyFrom(const depthdata_Data_Depth_sellAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ukex.depthdata.Data.Depth.sellAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool depthdata_Data_Depth_sellAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void depthdata_Data_Depth_sellAction::Swap(depthdata_Data_Depth_sellAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void depthdata_Data_Depth_sellAction::InternalSwap(depthdata_Data_Depth_sellAction* other) {
  s0_.Swap(&other->s0_);
  s1_.Swap(&other->s1_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata depthdata_Data_Depth_sellAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = depthdata_Data_Depth_sellAction_descriptor_;
  metadata.reflection = depthdata_Data_Depth_sellAction_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int depthdata_Data_Depth::kBuyFieldNumber;
const int depthdata_Data_Depth::kSellFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

depthdata_Data_Depth::depthdata_Data_Depth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ukex.depthdata.Data.Depth)
}

void depthdata_Data_Depth::InitAsDefaultInstance() {
}

depthdata_Data_Depth::depthdata_Data_Depth(const depthdata_Data_Depth& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ukex.depthdata.Data.Depth)
}

void depthdata_Data_Depth::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

depthdata_Data_Depth::~depthdata_Data_Depth() {
  // @@protoc_insertion_point(destructor:ukex.depthdata.Data.Depth)
  SharedDtor();
}

void depthdata_Data_Depth::SharedDtor() {
  if (this != default_instance_) {
  }
}

void depthdata_Data_Depth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* depthdata_Data_Depth::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return depthdata_Data_Depth_descriptor_;
}

const depthdata_Data_Depth& depthdata_Data_Depth::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ukex_2edepthdata_2eproto();
  return *default_instance_;
}

depthdata_Data_Depth* depthdata_Data_Depth::default_instance_ = NULL;

depthdata_Data_Depth* depthdata_Data_Depth::New(::google::protobuf::Arena* arena) const {
  depthdata_Data_Depth* n = new depthdata_Data_Depth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void depthdata_Data_Depth::Clear() {
// @@protoc_insertion_point(message_clear_start:ukex.depthdata.Data.Depth)
  buy_.Clear();
  sell_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool depthdata_Data_Depth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ukex.depthdata.Data.Depth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ukex.depthdata.Data.Depth.buyAction buy = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_buy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_buy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_buy;
        if (input->ExpectTag(18)) goto parse_loop_sell;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ukex.depthdata.Data.Depth.sellAction sell = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_sell:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sell()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_sell;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ukex.depthdata.Data.Depth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ukex.depthdata.Data.Depth)
  return false;
#undef DO_
}

void depthdata_Data_Depth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ukex.depthdata.Data.Depth)
  // repeated .ukex.depthdata.Data.Depth.buyAction buy = 1;
  for (unsigned int i = 0, n = this->buy_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buy(i), output);
  }

  // repeated .ukex.depthdata.Data.Depth.sellAction sell = 2;
  for (unsigned int i = 0, n = this->sell_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sell(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ukex.depthdata.Data.Depth)
}

::google::protobuf::uint8* depthdata_Data_Depth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ukex.depthdata.Data.Depth)
  // repeated .ukex.depthdata.Data.Depth.buyAction buy = 1;
  for (unsigned int i = 0, n = this->buy_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->buy(i), false, target);
  }

  // repeated .ukex.depthdata.Data.Depth.sellAction sell = 2;
  for (unsigned int i = 0, n = this->sell_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->sell(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ukex.depthdata.Data.Depth)
  return target;
}

int depthdata_Data_Depth::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ukex.depthdata.Data.Depth)
  int total_size = 0;

  // repeated .ukex.depthdata.Data.Depth.buyAction buy = 1;
  total_size += 1 * this->buy_size();
  for (int i = 0; i < this->buy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buy(i));
  }

  // repeated .ukex.depthdata.Data.Depth.sellAction sell = 2;
  total_size += 1 * this->sell_size();
  for (int i = 0; i < this->sell_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sell(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void depthdata_Data_Depth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ukex.depthdata.Data.Depth)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const depthdata_Data_Depth* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const depthdata_Data_Depth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ukex.depthdata.Data.Depth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ukex.depthdata.Data.Depth)
    MergeFrom(*source);
  }
}

void depthdata_Data_Depth::MergeFrom(const depthdata_Data_Depth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ukex.depthdata.Data.Depth)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  buy_.MergeFrom(from.buy_);
  sell_.MergeFrom(from.sell_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void depthdata_Data_Depth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ukex.depthdata.Data.Depth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void depthdata_Data_Depth::CopyFrom(const depthdata_Data_Depth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ukex.depthdata.Data.Depth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool depthdata_Data_Depth::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->buy())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->sell())) return false;
  return true;
}

void depthdata_Data_Depth::Swap(depthdata_Data_Depth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void depthdata_Data_Depth::InternalSwap(depthdata_Data_Depth* other) {
  buy_.UnsafeArenaSwap(&other->buy_);
  sell_.UnsafeArenaSwap(&other->sell_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata depthdata_Data_Depth::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = depthdata_Data_Depth_descriptor_;
  metadata.reflection = depthdata_Data_Depth_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int depthdata_Data::kDepthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

depthdata_Data::depthdata_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ukex.depthdata.Data)
}

void depthdata_Data::InitAsDefaultInstance() {
  depth_ = const_cast< ::ukex::depthdata_Data_Depth*>(&::ukex::depthdata_Data_Depth::default_instance());
}

depthdata_Data::depthdata_Data(const depthdata_Data& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ukex.depthdata.Data)
}

void depthdata_Data::SharedCtor() {
  _cached_size_ = 0;
  depth_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

depthdata_Data::~depthdata_Data() {
  // @@protoc_insertion_point(destructor:ukex.depthdata.Data)
  SharedDtor();
}

void depthdata_Data::SharedDtor() {
  if (this != default_instance_) {
    delete depth_;
  }
}

void depthdata_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* depthdata_Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return depthdata_Data_descriptor_;
}

const depthdata_Data& depthdata_Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ukex_2edepthdata_2eproto();
  return *default_instance_;
}

depthdata_Data* depthdata_Data::default_instance_ = NULL;

depthdata_Data* depthdata_Data::New(::google::protobuf::Arena* arena) const {
  depthdata_Data* n = new depthdata_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void depthdata_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:ukex.depthdata.Data)
  if (has_depth()) {
    if (depth_ != NULL) depth_->::ukex::depthdata_Data_Depth::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool depthdata_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ukex.depthdata.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ukex.depthdata.Data.Depth depth = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_depth()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ukex.depthdata.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ukex.depthdata.Data)
  return false;
#undef DO_
}

void depthdata_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ukex.depthdata.Data)
  // required .ukex.depthdata.Data.Depth depth = 1;
  if (has_depth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->depth_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ukex.depthdata.Data)
}

::google::protobuf::uint8* depthdata_Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ukex.depthdata.Data)
  // required .ukex.depthdata.Data.Depth depth = 1;
  if (has_depth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->depth_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ukex.depthdata.Data)
  return target;
}

int depthdata_Data::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ukex.depthdata.Data)
  int total_size = 0;

  // required .ukex.depthdata.Data.Depth depth = 1;
  if (has_depth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->depth_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void depthdata_Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ukex.depthdata.Data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const depthdata_Data* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const depthdata_Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ukex.depthdata.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ukex.depthdata.Data)
    MergeFrom(*source);
  }
}

void depthdata_Data::MergeFrom(const depthdata_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ukex.depthdata.Data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_depth()) {
      mutable_depth()->::ukex::depthdata_Data_Depth::MergeFrom(from.depth());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void depthdata_Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ukex.depthdata.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void depthdata_Data::CopyFrom(const depthdata_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ukex.depthdata.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool depthdata_Data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_depth()) {
    if (!this->depth_->IsInitialized()) return false;
  }
  return true;
}

void depthdata_Data::Swap(depthdata_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void depthdata_Data::InternalSwap(depthdata_Data* other) {
  std::swap(depth_, other->depth_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata depthdata_Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = depthdata_Data_descriptor_;
  metadata.reflection = depthdata_Data_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int depthdata::kTypeFieldNumber;
const int depthdata::kDataFieldNumber;
const int depthdata::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

depthdata::depthdata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ukex.depthdata)
}

void depthdata::InitAsDefaultInstance() {
  data_ = const_cast< ::ukex::depthdata_Data*>(&::ukex::depthdata_Data::default_instance());
}

depthdata::depthdata(const depthdata& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ukex.depthdata)
}

void depthdata::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

depthdata::~depthdata() {
  // @@protoc_insertion_point(destructor:ukex.depthdata)
  SharedDtor();
}

void depthdata::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void depthdata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* depthdata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return depthdata_descriptor_;
}

const depthdata& depthdata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ukex_2edepthdata_2eproto();
  return *default_instance_;
}

depthdata* depthdata::default_instance_ = NULL;

depthdata* depthdata::New(::google::protobuf::Arena* arena) const {
  depthdata* n = new depthdata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void depthdata::Clear() {
// @@protoc_insertion_point(message_clear_start:ukex.depthdata)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_type()) {
      type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_data()) {
      if (data_ != NULL) data_->::ukex::depthdata_Data::Clear();
    }
    if (has_token()) {
      token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool depthdata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ukex.depthdata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ukex.depthdata.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // required .ukex.depthdata.Data data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_token;
        break;
      }

      // optional string token = 3;
      case 3: {
        if (tag == 26) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ukex.depthdata.token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ukex.depthdata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ukex.depthdata)
  return false;
#undef DO_
}

void depthdata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ukex.depthdata)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // required .ukex.depthdata.Data data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // optional string token = 3;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ukex.depthdata)
}

::google::protobuf::uint8* depthdata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ukex.depthdata)
  // required string type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // required .ukex.depthdata.Data data = 2;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, false, target);
  }

  // optional string token = 3;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ukex.depthdata.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ukex.depthdata)
  return target;
}

int depthdata::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ukex.depthdata)
  int total_size = 0;

  if (has_type()) {
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_data()) {
    // required .ukex.depthdata.Data data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  return total_size;
}
int depthdata::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ukex.depthdata)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required .ukex.depthdata.Data data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string token = 3;
  if (has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void depthdata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ukex.depthdata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const depthdata* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const depthdata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ukex.depthdata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ukex.depthdata)
    MergeFrom(*source);
  }
}

void depthdata::MergeFrom(const depthdata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ukex.depthdata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.has_data()) {
      mutable_data()->::ukex::depthdata_Data::MergeFrom(from.data());
    }
    if (from.has_token()) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void depthdata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ukex.depthdata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void depthdata::CopyFrom(const depthdata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ukex.depthdata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool depthdata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void depthdata::Swap(depthdata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void depthdata::InternalSwap(depthdata* other) {
  type_.Swap(&other->type_);
  std::swap(data_, other->data_);
  token_.Swap(&other->token_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata depthdata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = depthdata_descriptor_;
  metadata.reflection = depthdata_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// depthdata_Data_Depth_buyAction

// required string b0 = 1;
bool depthdata_Data_Depth_buyAction::has_b0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void depthdata_Data_Depth_buyAction::set_has_b0() {
  _has_bits_[0] |= 0x00000001u;
}
void depthdata_Data_Depth_buyAction::clear_has_b0() {
  _has_bits_[0] &= ~0x00000001u;
}
void depthdata_Data_Depth_buyAction::clear_b0() {
  b0_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_b0();
}
 const ::std::string& depthdata_Data_Depth_buyAction::b0() const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.Data.Depth.buyAction.b0)
  return b0_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata_Data_Depth_buyAction::set_b0(const ::std::string& value) {
  set_has_b0();
  b0_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ukex.depthdata.Data.Depth.buyAction.b0)
}
 void depthdata_Data_Depth_buyAction::set_b0(const char* value) {
  set_has_b0();
  b0_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ukex.depthdata.Data.Depth.buyAction.b0)
}
 void depthdata_Data_Depth_buyAction::set_b0(const char* value, size_t size) {
  set_has_b0();
  b0_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ukex.depthdata.Data.Depth.buyAction.b0)
}
 ::std::string* depthdata_Data_Depth_buyAction::mutable_b0() {
  set_has_b0();
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.Data.Depth.buyAction.b0)
  return b0_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* depthdata_Data_Depth_buyAction::release_b0() {
  // @@protoc_insertion_point(field_release:ukex.depthdata.Data.Depth.buyAction.b0)
  clear_has_b0();
  return b0_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata_Data_Depth_buyAction::set_allocated_b0(::std::string* b0) {
  if (b0 != NULL) {
    set_has_b0();
  } else {
    clear_has_b0();
  }
  b0_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b0);
  // @@protoc_insertion_point(field_set_allocated:ukex.depthdata.Data.Depth.buyAction.b0)
}

// required string b1 = 2;
bool depthdata_Data_Depth_buyAction::has_b1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void depthdata_Data_Depth_buyAction::set_has_b1() {
  _has_bits_[0] |= 0x00000002u;
}
void depthdata_Data_Depth_buyAction::clear_has_b1() {
  _has_bits_[0] &= ~0x00000002u;
}
void depthdata_Data_Depth_buyAction::clear_b1() {
  b1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_b1();
}
 const ::std::string& depthdata_Data_Depth_buyAction::b1() const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.Data.Depth.buyAction.b1)
  return b1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata_Data_Depth_buyAction::set_b1(const ::std::string& value) {
  set_has_b1();
  b1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ukex.depthdata.Data.Depth.buyAction.b1)
}
 void depthdata_Data_Depth_buyAction::set_b1(const char* value) {
  set_has_b1();
  b1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ukex.depthdata.Data.Depth.buyAction.b1)
}
 void depthdata_Data_Depth_buyAction::set_b1(const char* value, size_t size) {
  set_has_b1();
  b1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ukex.depthdata.Data.Depth.buyAction.b1)
}
 ::std::string* depthdata_Data_Depth_buyAction::mutable_b1() {
  set_has_b1();
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.Data.Depth.buyAction.b1)
  return b1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* depthdata_Data_Depth_buyAction::release_b1() {
  // @@protoc_insertion_point(field_release:ukex.depthdata.Data.Depth.buyAction.b1)
  clear_has_b1();
  return b1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata_Data_Depth_buyAction::set_allocated_b1(::std::string* b1) {
  if (b1 != NULL) {
    set_has_b1();
  } else {
    clear_has_b1();
  }
  b1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b1);
  // @@protoc_insertion_point(field_set_allocated:ukex.depthdata.Data.Depth.buyAction.b1)
}

// -------------------------------------------------------------------

// depthdata_Data_Depth_sellAction

// required string s0 = 1;
bool depthdata_Data_Depth_sellAction::has_s0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void depthdata_Data_Depth_sellAction::set_has_s0() {
  _has_bits_[0] |= 0x00000001u;
}
void depthdata_Data_Depth_sellAction::clear_has_s0() {
  _has_bits_[0] &= ~0x00000001u;
}
void depthdata_Data_Depth_sellAction::clear_s0() {
  s0_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s0();
}
 const ::std::string& depthdata_Data_Depth_sellAction::s0() const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.Data.Depth.sellAction.s0)
  return s0_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata_Data_Depth_sellAction::set_s0(const ::std::string& value) {
  set_has_s0();
  s0_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ukex.depthdata.Data.Depth.sellAction.s0)
}
 void depthdata_Data_Depth_sellAction::set_s0(const char* value) {
  set_has_s0();
  s0_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ukex.depthdata.Data.Depth.sellAction.s0)
}
 void depthdata_Data_Depth_sellAction::set_s0(const char* value, size_t size) {
  set_has_s0();
  s0_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ukex.depthdata.Data.Depth.sellAction.s0)
}
 ::std::string* depthdata_Data_Depth_sellAction::mutable_s0() {
  set_has_s0();
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.Data.Depth.sellAction.s0)
  return s0_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* depthdata_Data_Depth_sellAction::release_s0() {
  // @@protoc_insertion_point(field_release:ukex.depthdata.Data.Depth.sellAction.s0)
  clear_has_s0();
  return s0_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata_Data_Depth_sellAction::set_allocated_s0(::std::string* s0) {
  if (s0 != NULL) {
    set_has_s0();
  } else {
    clear_has_s0();
  }
  s0_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s0);
  // @@protoc_insertion_point(field_set_allocated:ukex.depthdata.Data.Depth.sellAction.s0)
}

// required string s1 = 2;
bool depthdata_Data_Depth_sellAction::has_s1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void depthdata_Data_Depth_sellAction::set_has_s1() {
  _has_bits_[0] |= 0x00000002u;
}
void depthdata_Data_Depth_sellAction::clear_has_s1() {
  _has_bits_[0] &= ~0x00000002u;
}
void depthdata_Data_Depth_sellAction::clear_s1() {
  s1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s1();
}
 const ::std::string& depthdata_Data_Depth_sellAction::s1() const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.Data.Depth.sellAction.s1)
  return s1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata_Data_Depth_sellAction::set_s1(const ::std::string& value) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ukex.depthdata.Data.Depth.sellAction.s1)
}
 void depthdata_Data_Depth_sellAction::set_s1(const char* value) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ukex.depthdata.Data.Depth.sellAction.s1)
}
 void depthdata_Data_Depth_sellAction::set_s1(const char* value, size_t size) {
  set_has_s1();
  s1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ukex.depthdata.Data.Depth.sellAction.s1)
}
 ::std::string* depthdata_Data_Depth_sellAction::mutable_s1() {
  set_has_s1();
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.Data.Depth.sellAction.s1)
  return s1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* depthdata_Data_Depth_sellAction::release_s1() {
  // @@protoc_insertion_point(field_release:ukex.depthdata.Data.Depth.sellAction.s1)
  clear_has_s1();
  return s1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata_Data_Depth_sellAction::set_allocated_s1(::std::string* s1) {
  if (s1 != NULL) {
    set_has_s1();
  } else {
    clear_has_s1();
  }
  s1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s1);
  // @@protoc_insertion_point(field_set_allocated:ukex.depthdata.Data.Depth.sellAction.s1)
}

// -------------------------------------------------------------------

// depthdata_Data_Depth

// repeated .ukex.depthdata.Data.Depth.buyAction buy = 1;
int depthdata_Data_Depth::buy_size() const {
  return buy_.size();
}
void depthdata_Data_Depth::clear_buy() {
  buy_.Clear();
}
const ::ukex::depthdata_Data_Depth_buyAction& depthdata_Data_Depth::buy(int index) const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.Data.Depth.buy)
  return buy_.Get(index);
}
::ukex::depthdata_Data_Depth_buyAction* depthdata_Data_Depth::mutable_buy(int index) {
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.Data.Depth.buy)
  return buy_.Mutable(index);
}
::ukex::depthdata_Data_Depth_buyAction* depthdata_Data_Depth::add_buy() {
  // @@protoc_insertion_point(field_add:ukex.depthdata.Data.Depth.buy)
  return buy_.Add();
}
::google::protobuf::RepeatedPtrField< ::ukex::depthdata_Data_Depth_buyAction >*
depthdata_Data_Depth::mutable_buy() {
  // @@protoc_insertion_point(field_mutable_list:ukex.depthdata.Data.Depth.buy)
  return &buy_;
}
const ::google::protobuf::RepeatedPtrField< ::ukex::depthdata_Data_Depth_buyAction >&
depthdata_Data_Depth::buy() const {
  // @@protoc_insertion_point(field_list:ukex.depthdata.Data.Depth.buy)
  return buy_;
}

// repeated .ukex.depthdata.Data.Depth.sellAction sell = 2;
int depthdata_Data_Depth::sell_size() const {
  return sell_.size();
}
void depthdata_Data_Depth::clear_sell() {
  sell_.Clear();
}
const ::ukex::depthdata_Data_Depth_sellAction& depthdata_Data_Depth::sell(int index) const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.Data.Depth.sell)
  return sell_.Get(index);
}
::ukex::depthdata_Data_Depth_sellAction* depthdata_Data_Depth::mutable_sell(int index) {
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.Data.Depth.sell)
  return sell_.Mutable(index);
}
::ukex::depthdata_Data_Depth_sellAction* depthdata_Data_Depth::add_sell() {
  // @@protoc_insertion_point(field_add:ukex.depthdata.Data.Depth.sell)
  return sell_.Add();
}
::google::protobuf::RepeatedPtrField< ::ukex::depthdata_Data_Depth_sellAction >*
depthdata_Data_Depth::mutable_sell() {
  // @@protoc_insertion_point(field_mutable_list:ukex.depthdata.Data.Depth.sell)
  return &sell_;
}
const ::google::protobuf::RepeatedPtrField< ::ukex::depthdata_Data_Depth_sellAction >&
depthdata_Data_Depth::sell() const {
  // @@protoc_insertion_point(field_list:ukex.depthdata.Data.Depth.sell)
  return sell_;
}

// -------------------------------------------------------------------

// depthdata_Data

// required .ukex.depthdata.Data.Depth depth = 1;
bool depthdata_Data::has_depth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void depthdata_Data::set_has_depth() {
  _has_bits_[0] |= 0x00000001u;
}
void depthdata_Data::clear_has_depth() {
  _has_bits_[0] &= ~0x00000001u;
}
void depthdata_Data::clear_depth() {
  if (depth_ != NULL) depth_->::ukex::depthdata_Data_Depth::Clear();
  clear_has_depth();
}
const ::ukex::depthdata_Data_Depth& depthdata_Data::depth() const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.Data.depth)
  return depth_ != NULL ? *depth_ : *default_instance_->depth_;
}
::ukex::depthdata_Data_Depth* depthdata_Data::mutable_depth() {
  set_has_depth();
  if (depth_ == NULL) {
    depth_ = new ::ukex::depthdata_Data_Depth;
  }
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.Data.depth)
  return depth_;
}
::ukex::depthdata_Data_Depth* depthdata_Data::release_depth() {
  // @@protoc_insertion_point(field_release:ukex.depthdata.Data.depth)
  clear_has_depth();
  ::ukex::depthdata_Data_Depth* temp = depth_;
  depth_ = NULL;
  return temp;
}
void depthdata_Data::set_allocated_depth(::ukex::depthdata_Data_Depth* depth) {
  delete depth_;
  depth_ = depth;
  if (depth) {
    set_has_depth();
  } else {
    clear_has_depth();
  }
  // @@protoc_insertion_point(field_set_allocated:ukex.depthdata.Data.depth)
}

// -------------------------------------------------------------------

// depthdata

// required string type = 1;
bool depthdata::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void depthdata::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void depthdata::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void depthdata::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
 const ::std::string& depthdata::type() const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ukex.depthdata.type)
}
 void depthdata::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ukex.depthdata.type)
}
 void depthdata::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ukex.depthdata.type)
}
 ::std::string* depthdata::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* depthdata::release_type() {
  // @@protoc_insertion_point(field_release:ukex.depthdata.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ukex.depthdata.type)
}

// required .ukex.depthdata.Data data = 2;
bool depthdata::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void depthdata::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void depthdata::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void depthdata::clear_data() {
  if (data_ != NULL) data_->::ukex::depthdata_Data::Clear();
  clear_has_data();
}
const ::ukex::depthdata_Data& depthdata::data() const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::ukex::depthdata_Data* depthdata::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::ukex::depthdata_Data;
  }
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.data)
  return data_;
}
::ukex::depthdata_Data* depthdata::release_data() {
  // @@protoc_insertion_point(field_release:ukex.depthdata.data)
  clear_has_data();
  ::ukex::depthdata_Data* temp = data_;
  data_ = NULL;
  return temp;
}
void depthdata::set_allocated_data(::ukex::depthdata_Data* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:ukex.depthdata.data)
}

// optional string token = 3;
bool depthdata::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void depthdata::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
void depthdata::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
void depthdata::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
 const ::std::string& depthdata::token() const {
  // @@protoc_insertion_point(field_get:ukex.depthdata.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ukex.depthdata.token)
}
 void depthdata::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ukex.depthdata.token)
}
 void depthdata::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ukex.depthdata.token)
}
 ::std::string* depthdata::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:ukex.depthdata.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* depthdata::release_token() {
  // @@protoc_insertion_point(field_release:ukex.depthdata.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void depthdata::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ukex.depthdata.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ukex

// @@protoc_insertion_point(global_scope)
